import type { Location, Action, History } from 'history';
import type { AnyAction as ReduxAction } from 'redux';
export declare const CALL_HISTORY_METHOD = "@@router/CALL_HISTORY_METHOD";
export declare const LOCATION_CHANGE = "@@router/LOCATION_CHANGE";
export declare type HistoryMethods = 'push' | 'replace' | 'go' | 'goBack' | 'goForward' | 'back' | 'forward';
export declare const locationChangeAction: (location: Location, action: Action) => {
    type: string;
    payload: {
        location: Location;
        action: Action;
    };
};
export declare const push: (...args: Parameters<History['push']>) => ReduxAction;
export declare const replace: (...args: Parameters<History['replace']>) => ReduxAction;
export declare const go: (...args: Parameters<History['go']>) => ReduxAction;
export declare const goBack: () => ReduxAction;
export declare const goForward: () => ReduxAction;
export declare const back: () => ReduxAction;
export declare const forward: () => ReduxAction;
export declare type RouterActions = ReturnType<typeof push> | ReturnType<typeof replace> | ReturnType<typeof go> | ReturnType<typeof goBack> | ReturnType<typeof goForward> | ReturnType<typeof locationChangeAction> | ReturnType<typeof back> | ReturnType<typeof forward>;
