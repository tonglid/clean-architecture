import { CALL_HISTORY_METHOD } from './actions';
export const createRouterMiddleware = ({ history, showHistoryAction }) => () => (next) => (action) => {
    if (action.type !== CALL_HISTORY_METHOD) {
        return next(action);
    }
    const method = action.payload.method;
    // @ts-ignore
    const args = action.payload.args;
    // eslint-disable-next-line default-case
    switch (method) {
        case 'push':
            history.push(...args);
            break;
        case 'replace':
            history.replace(...args);
            break;
        case 'go':
            history.go(...args);
            break;
        case 'back':
        case 'goBack':
            // @ts-ignore
            history.goBack && history.goBack(...args);
            //@ts-ignore //support history 5.x
            history.back && history.back(...args);
            break;
        case 'forward':
        case 'goForward':
            // @ts-ignore
            history.goForward && history.goForward(...args);
            //@ts-ignore //support history 5.x
            history.forward && history.forward(...args);
            break;
    }
    if (showHistoryAction)
        return next(action);
};
//# sourceMappingURL=middleware.js.map