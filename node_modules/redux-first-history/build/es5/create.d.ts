import type { History } from 'history';
import type { Middleware, Reducer, Store } from 'redux';
import type { ReachHistory } from './reachify.types';
import { RouterState } from './reducer';
export interface IHistoryContextOptions {
    history: History;
    routerReducerKey?: string;
    reduxTravelling?: boolean;
    showHistoryAction?: boolean;
    selectRouterState?: <S>(state: S) => RouterState;
    savePreviousLocations?: number;
    batch?: (callback: () => void) => void;
    reachGlobalHistory?: ReachHistory;
}
export interface IHistoryContext {
    createReduxHistory: (store: Store) => History & {
        listenObject: boolean;
    };
    routerMiddleware: Middleware;
    routerReducer: Reducer<RouterState>;
}
export declare const createReduxHistoryContext: ({ history, routerReducerKey, reduxTravelling, showHistoryAction, selectRouterState, savePreviousLocations, batch, reachGlobalHistory, }: IHistoryContextOptions) => IHistoryContext;
